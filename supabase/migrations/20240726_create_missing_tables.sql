-- Create backtest_results table if it doesn't exist
CREATE TABLE IF NOT EXISTS backtest_results (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pattern_id BIGINT NOT NULL,
    symbol TEXT,
    pattern_type TEXT,
    timeframe TEXT,
    success BOOLEAN NOT NULL,
    profit_loss_percent DECIMAL(8,2) NOT NULL,
    days_to_breakout INTEGER,
    days_to_target INTEGER,
    max_drawdown DECIMAL(8,2),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    FOREIGN KEY (pattern_id) REFERENCES detected_patterns(id) ON DELETE CASCADE
);

-- Create index on pattern_id for faster queries
CREATE INDEX IF NOT EXISTS idx_backtest_results_pattern_id ON backtest_results(pattern_id);

-- Create cached_patterns table if it doesn't exist
CREATE TABLE IF NOT EXISTS cached_patterns (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    symbol TEXT NOT NULL,
    timeframe TEXT NOT NULL,
    pattern_type TEXT NOT NULL,
    entry_price DECIMAL(12,4) NOT NULL,
    target_price DECIMAL(12,4) NOT NULL,
    confidence_score DECIMAL(8,2) NOT NULL,
    status TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    channel_type TEXT NOT NULL,
    ema_pattern TEXT,
    support_level DECIMAL(12,4),
    resistance_level DECIMAL(12,4),
    trendline_break BOOLEAN DEFAULT FALSE,
    volume_confirmation BOOLEAN DEFAULT FALSE,
    intra_channel_pattern TEXT,
    stop_loss DECIMAL(12,4),
    risk_reward_ratio DECIMAL(8,2)
);

-- Create indexes for cached_patterns
CREATE INDEX IF NOT EXISTS idx_cached_patterns_symbol ON cached_patterns(symbol);
CREATE INDEX IF NOT EXISTS idx_cached_patterns_timeframe ON cached_patterns(timeframe);
CREATE INDEX IF NOT EXISTS idx_cached_patterns_pattern_type ON cached_patterns(pattern_type);
CREATE INDEX IF NOT EXISTS idx_cached_patterns_created_at ON cached_patterns(created_at);

-- Enable Row Level Security (RLS) with default deny
ALTER TABLE backtest_results ENABLE ROW LEVEL SECURITY;
ALTER TABLE cached_patterns ENABLE ROW LEVEL SECURITY;

-- Create policy for authenticated users to read data
CREATE POLICY "Allow authenticated users to read backtest_results"
ON backtest_results FOR SELECT
TO authenticated
USING (true);

CREATE POLICY "Allow authenticated users to read cached_patterns"
ON cached_patterns FOR SELECT
TO authenticated
USING (true);

-- Create policy for anon users to read cached_patterns
CREATE POLICY "Allow anon users to read cached_patterns"
ON cached_patterns FOR SELECT
TO anon
USING (true); 